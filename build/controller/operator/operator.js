// Generated by CoffeeScript 2.3.2
(function() {
  var Operator, exec, operator, red, spawnCmd;

  spawnCmd = require('../../utils/spawnCmd');

  ({exec} = require('child_process'));

  ({red} = require('chalk'));

  operator = Symbol('operator');

  Operator = class Operator {
    constructor() {
      this.addTemp = this.addTemp.bind(this);
    }

    addTemp(req, res) {
      var addToTemp, base_path, tempDirs;
      base_path = req.headers['cookie'].replace('current_dir=', '');
      tempDirs = req.body['tempdirs[]'] || req.body['tempdirs'];
      addToTemp = tempDirs === 'all' ? '.' : `${tempDirs}`.replace(/,/g, ' ');
      if (addToTemp === 'undefined') {
        return res.send({
          code: 1,
          srv_msg: "没有文件被添加至暂存区"
        });
      } else {
        return exec(`git add ${addToTemp}`, {
          cwd: decodeURIComponent(base_path)
        }, function(err, stdout1, stdin1) {
          if (err) {
            console.log(red(err));
            if (/Not a git repository/gi.test(err.toString())) {
              return res.send({
                code: 0,
                err_msg: '没有.git 请先初始化'
              });
            }
          } else {
            return res.send({
              code: 1,
              srv_msg: stdout1 === '' ? '暂存区添加成功' : stdout1
            });
          }
        });
      }
    }

    addCommit(req, res) {
      var base_path, data;
      ({data} = req.body);
      base_path = req.headers['cookie'].replace('current_dir=', '');
      return spawnCmd('git', ['commit', '-m', `'${data}'`], {
        cwd: decodeURIComponent(base_path)
      }).then(function(val) {
        if (/干净的工作区/.test(val.data)) {
          return res.send({
            code: 1,
            srv_msg: val.data
          });
        } else {
          return res.send({
            code: 1,
            srv_msg: '创建成功'
          });
        }
      }).catch(function(err) {
        console.log(red(err));
        return res.send(err);
      });
    }

    addRemote(req, res) {
      var base_path, remoteGit;
      base_path = req.headers['cookie'].replace('current_dir=', '');
      ({remoteGit} = req.body);
      return spawnCmd('git', ['remote', 'add', 'origin', remoteGit], {
        cwd: base_path
      }).then(function(rval) {
        return res.send({
          code: 1,
          err_msg
        });
      }).catch(function(rerr) {
        return res.send(rerr);
      });
    }

  };

  if (!global[operator]) {
    global[operator] = new Operator();
  }

  module.exports = global[operator];

}).call(this);

//# sourceMappingURL=operator.js.map
