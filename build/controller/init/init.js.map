{
  "version": 3,
  "file": "init.js",
  "sourceRoot": "../../..",
  "sources": [
    "src/controller/init/init.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "express = require 'express'\ncheckPath = require '../../utils/checkPath'\nspawnCmd = require '../../utils/spawnCmd'\ncurrentFiles = require '../../utils/currentFiles'\n{ red } = require 'chalk'\n\ninit = Symbol 'init'\n    \n\nclass Init\n    # constructor: (@) ->\n\n    init: (req, res) ->\n        { action } = req.params\n        { path } = req.body\n        switch  action\n\n            when 'repo'\n\n                checkPath(path).then((val) ->\n                    spawnCmd( 'git', ['init'], { cwd: path } ).then((v) ->\n                        if v.code is 1\n                            options=\n                                maxAge: Math.pow 100, 10\n                                path: '/'\n\n                            currentFiles(path).then((val) ->\n                                res.cookie 'current_dir', path, options\n                                res.send {\n                                    code: 1,\n                                    files: val\n                                    srv_msg: \"#{v.data.toString()}\"\n                                }\n                            ).catch((err) ->\n                                res.send err\n                            )\n\n                    ).catch((err) ->\n                        process.stdout.write red(err)\n                        res.status(500).send { code: 0, err_msg: 'git未执行' }\n                    )\n                ).catch((err) ->\n                    process.stdout.write red(err)\n                    res.send err\n                )\n\n\n            when 'current'\n                { historyPath } = req.body\n                currentFiles(historyPath).then((val) ->\n                    res.send {\n                        code: 1,\n                        files: val\n                    }\n                ).catch((err) ->\n                    res.send err\n                )\n\n        \n\n\n\nif not global[init]\n    global[init] = new Init()\n\nmodule.exports = global[init]\n\n\n"
  ]
}