// Generated by CoffeeScript 2.3.2
(function() {
  var Init, checkPath, currentFiles, express, init, red, spawnCmd;

  express = require('express');

  checkPath = require('../../utils/checkPath');

  spawnCmd = require('../../utils/spawnCmd');

  currentFiles = require('../../utils/currentFiles');

  ({red} = require('chalk'));

  init = Symbol('init');

  Init = class Init {
    // constructor: (@) ->
    init(req, res) {
      var action, historyPath, path;
      ({action} = req.params);
      ({path} = req.body);
      switch (action) {
        case 'repo':
          return checkPath(path).then(function(val) {
            return spawnCmd('git', ['init'], {
              cwd: path
            }).then(function(v) {
              var options;
              if (v.code === 1) {
                options = {
                  maxAge: Math.pow(100, 10),
                  path: '/'
                };
                return currentFiles(path).then(function(val) {
                  res.cookie('current_dir', path, options);
                  return res.send({
                    code: 1,
                    files: val,
                    srv_msg: `${v.data.toString()}`
                  });
                }).catch(function(err) {
                  return res.send(err);
                });
              }
            }).catch(function(err) {
              process.stdout.write(red(err));
              return res.status(500).send({
                code: 0,
                err_msg: 'git未执行'
              });
            });
          }).catch(function(err) {
            process.stdout.write(red(err));
            return res.send(err);
          });
        case 'current':
          ({historyPath} = req.body);
          return currentFiles(historyPath).then(function(val) {
            return res.send({
              code: 1,
              files: val
            });
          }).catch(function(err) {
            return res.send(err);
          });
      }
    }

  };

  if (!global[init]) {
    global[init] = new Init();
  }

  module.exports = global[init];

}).call(this);

//# sourceMappingURL=init.js.map
